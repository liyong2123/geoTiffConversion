import gdal
import netCDF4
import numpy as np
import matplotlib.pyplot as plt
from matplotlib import colors
import plotly.graph_objects as go

xaxis =[]

cmap = colors.ListedColormap(['Blue','red','green'])

netcdf_fname = input("Enter File Name:")

f = netCDF4.Dataset(netcdf_fname,'r')
lats = f.dimensions['x']
lons = f.dimensions['y']
depth = f.dimensions['Depth']

print("Max x = "+str(lons.size - 1))
print("Max y = "+str(lats.size - 1))


x = input("Enter x : ")
y = input("Enter y : ")

if(int(x) > lons.size or int(x)<0):
    print("X is Out of Bounds")
    exit()
elif(int(y)>lats.size):
    print("Y is Out of Bounds" or int(y)<0)
    exit()

depth = depth.size

band = "Band"

data = f.variables["Band1"]
arr = []

for i in range (1, depth+1):
    b = str(i)

    data = f.variables[band+b][x,y]
    xaxis.append(i)
    arr.append(data)
    #print(f.variables)
    #f.variables[] will return shape of (x,y)
    #f.variables[][] will return shape of (y)
    #f.varaibles[][][] will return shape of ()
    #used for data proccessing later OCI
    #print("STD = "+str(np.std(data)))
    #print("Mean = "+str(np.mean(data)))
    datas = str(data)
    print("X: "+str(x)+" Y: "+str(y)+"  "+band+b+": "+datas)
a = 0
plt.imshow(f.variables["Band100"])
ax = plt.gca()
fig = plt.gcf()
implot = ax.imshow(f.variables["Band100"])
def onclick(event):
    if event.xdata != None and event.ydata != None:
        y = int(event.xdata)
        x = int(event.ydata)
        print(x)
        print(y)
        arrTemp = []
        for a in range (1,depth + 1):
            dataTemp = f.variables[band+str(a)][x,y]
            arrTemp.append(dataTemp)
        #plt.close()
        a = 1
        fig2 = go.Figure()
        fig2.add_trace(go.Scatter(x=xaxis, y=arrTemp, name='Values',
                         line=dict(color='firebrick', width=4)))
        
        fig2.show()
        
cid = fig.canvas.mpl_connect('button_press_event', onclick)
if(a==0):
    plt.show()

